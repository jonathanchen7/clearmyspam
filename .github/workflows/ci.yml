name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  security_and_lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: brakeman
        run: bin/brakeman --no-pager

      - name: importmap audit
        run: bin/importmap audit

      - name: rubocop
        run: bin/rubocop -f github

  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips postgresql-client

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_TEST_MASTER_KEY }}
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: bin/rails db:test:prepare test test:system

      - name: Upload failed test screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

  deploy:
    runs-on: ubuntu-latest
    needs: tests
    if: needs.tests.result == 'success' && github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to Render
        env:
          web_deploy_url: ${{ secrets.RENDER_WEB_DEPLOY_HOOK_URL }}
          worker_deploy_url: ${{ secrets.RENDER_WORKER_DEPLOY_HOOK_URL }}
        run: |
          curl "$web_deploy_url"
          curl "$worker_deploy_url"

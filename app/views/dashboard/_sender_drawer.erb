<%# locals: (sender:, page: 1, emails: nil) %>
<%= turbo_frame_tag "sender_drawer",
                    data: Views::StimulusData.new(
                      include_controller: true,
                      controllers: "sender-drawer",
                      targets: { "sender-drawer" => "drawerContainer" },
                      values: {
                        "sender-drawer" => {
                          "sender-id" => sender.id,
                          "sender-email" => sender.email,
                          "page" => page,
                          "email-count" => sender.email_count,
                          "emails-per-page" => Rails.configuration.sender_emails_per_page,
                          "emails-on-page" => [sender.email_count, Rails.configuration.sender_emails_per_page].min
                        }
                      }
                    ).erb_attributes do %>
  <div class="relative" aria-labelledby="slide-over-title" role="dialog" aria-modal="true">
    <div class="fixed inset-0 z-20 bg-gray-500/75 transition-opacity" aria-hidden="true"></div>
    <div class="fixed inset-0 z-20">
      <div class="absolute inset-0">
        <div class="pointer-events-none fixed inset-y-0 right-0 flex max-w-full">
          <div class="pointer-events-auto w-screen max-w-sm sm:max-w-3xl" data-sender-drawer-target="drawer">
            <div class="flex h-full flex-col overflow-y-scroll bg-white shadow-xl">
              <div class="px-2">
                <div class="sticky top-0 bg-white z-30">
                  <div class="flex justify-between pt-4 sm:pt-5 mb-2 px-2">
                    <div class="flex flex-col sm:flex-row gap-y-2 gap-x-4">
                      <div class="flex flex-row gap-x-3 items-center">
                        <%= render Dashboard::SenderPictureComponent.new(sender) %>
                        <%= render Dashboard::SenderDetailsComponent.new(sender) %>
                      </div>
                    </div>
                    <div class="ml-3 flex h-7 items-center">
                      <button
                        type="button"
                        class="relative rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
                        data-sender-drawer-target="closeButton"
                      >
                        <%= icon("fa-solid", "xmark") %>
                      </button>
                    </div>
                  </div>
                  <div class="flex items-center justify-between py-1 sm:py-2 pl-2 sm:pl-4">
                    <div class="flex items-center gap-x-2">
                      <div class="flex items-center gap-x-2">
                        <%= check_box_tag(false,
                                          class: "h-3.5 w-3.5 rounded disabled:opacity-50",
                                          data: {
                                            action: "change->sender-drawer#toggleSelectAll",
                                            "sender-drawer-target": "selectAllCheckbox"
                                          }) %>
                      </div>
                      <div class="flex items-center">
                        <%= render IconButtonComponent.new(
                          icon: Current.options.archive ? "box-archive" : "trash-can",
                          color: "text-danger",
                          disabled: true,
                          tooltip: "#{Current.options.archive ? "Archive" : "Delete"} Selected",
                          stimulus_data: Views::StimulusData.new(
                            actions: { "click" => "sender-drawer#disposeSelected" },
                            targets: { "sender-drawer" => "disposeIconButton" }
                          )
                        ) %>
                        <%= render IconButtonComponent.new(
                          icon: "lock",
                          color: "text-success",
                          tooltip: "Protect Selected",
                          disabled: true,
                          stimulus_data: Views::StimulusData.new(
                            actions: { "click" => "sender-drawer#protectSelected" },
                            targets: { "sender-drawer" => "protectIconButton" }
                          )
                        ) %>
                        <%= render IconButtonComponent.new(
                          icon: "lock-open",
                          color: "text-warning",
                          tooltip: "Unprotect Selected",
                          disabled: true,
                          stimulus_data: Views::StimulusData.new(
                            actions: { "click" => "sender-drawer#unprotectSelected" },
                            targets: { "sender-drawer" => "unprotectIconButton" }
                          )
                        ) %>
                      </div>
                    </div>
                    <div class="flex items-center gap-x-1 sm:gap-x-2">
                      <% total_count = sender.email_count || 0 %>
                      <% emails_per_page = Rails.configuration.sender_emails_per_page %>
                      <% start_index = ((page - 1) * emails_per_page) + 1 %>
                      <% end_index = [start_index + emails_per_page - 1, total_count].min %>
                      <% emails_on_page = end_index - start_index + 1 %>
                      <p class="text-xs sm:text-sm text-gray-600">
                        <%= "#{start_index}-#{end_index} of #{total_count}" %>
                      </p>
                      <div class="flex items-center">
                          <%= render IconButtonComponent.new(
                            icon: "chevron-left",
                            color: "text-gray-400",
                          disabled: page == 1,
                          stimulus_data: Views::StimulusData.new(
                            actions: { "click" => "sender-drawer#previousPage" },
                            targets: { "sender-drawer" => "previousPageButton" },
                          )
                        ) %>
                        <%= render IconButtonComponent.new(
                          icon: "chevron-right",
                          color: "text-gray-400",
                          disabled: end_index >= total_count,
                          stimulus_data: Views::StimulusData.new(
                            actions: { "click" => "sender-drawer#nextPage" },
                            targets: { "sender-drawer" => "nextPageButton" },
                            )
                          ) %>
                      </div>
                      <%= render PillButtonComponent.new(
                        type: DashboardHelper::ButtonTypes::TEXT,
                        stimulus_data: Views::StimulusData.new(
                          controllers: "sender-drawer",
                          actions: { "click" => "sender-drawer#unsubscribe" },
                          targets: { "sender-drawer" => "unsubscribeButton" }
                        )
                      ) do %>
                        Unsubscribe
                      <% end %>
                    </div>
                  </div>
                </div>
                <div data-sender-drawer-target="selectAllFromSenderBanner" class="hidden">
                  <div class="flex flex-col sm:flex-row items-center justify-center gap-2 w-full text-center text-sm bg-gray-100 py-3 px-2">
                    <span data-sender-drawer-target="selectAllFromSenderBannerText">All <b class="text-primary"><%= emails_on_page %></b> email(s) on this page are selected.</span>
                    <button class="text-primary bg-white outline outline-1 outline-gray-400 duration-200 rounded-full px-3 py-1 text-xs font-medium hover:enabled:brightness-95 disabled:opacity-50"
                            data-action="click->sender-drawer#toggleSelectAllFromSender"
                            data-sender-drawer-target="selectAllFromSenderButton"
                            data-sender-drawer-sender-email-param="<%= sender.email %>"
                            data-sender-drawer-sender-count-param="<%= sender.email_count %>"
                            data-sender-drawer-emails-on-page-param="<%= emails_on_page %>">
                      Select all <%= sender.email_count %> from <%= sender.email %>
                    </button>
                  </div>
                </div>
                <div id="emails-table">
                  <% if emails.blank? %>
                    <div class="flex flex-col divide-y">
                      <% [sender.email_count, Rails.configuration.sender_emails_per_page].min.times do %>
                        <div class="w-full flex flex-row items-center gap-x-3 sm:gap-x-4 p-2.5 sm:px-4">
                          <div class="h-3.5 w-3.5 rounded bg-loading"></div>
                          <div class="flex flex-col w-full">
                            <div class="w-32 sm:w-48 h-3 bg-loading rounded-md"></div>
                            <div class="mt-2 w-48 sm:w-96 h-3 bg-loading rounded-md"></div>
                          </div>
                        </div>
                      <% end %>
                    </div>
                  <% else %>
                    <%= render Dashboard::EmailsTableComponent.new(emails: emails) %>
                  <% end %>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
<% end %>